
django: urls and views 
        models ,serializers 
        admin


DJANGO  Module Introduction  Installation of Django  Creating a Django Project  URLs & Views  Creating More Views and URLs  Redirects  Reverse function  Template & Static Files  Adding & Registering Templates  Rendering Templates  Template Inheritance  Adding Static Files  Adding CSS Styling  Building Static URLs Dynamically  Data & Models  Understanding Database Options  Django Models with fields  Migrations  Inserting Data & Updating  Querying and Filtering data  Preparing Templates  Rendering Queried Data in the Template  Model URLs  Adding a Slugfield & Overwriting Save  Admin  Relationships  Forms  Class Views  File Uploads  Django Rest Framework  Git & Github    

-----------------------------------------------------------------------------------------

Framework :
    -> it is a structure that you can build software on it 
    -> Using Framework Saves time and reduces the risk of error'S
    -> you don't need to configure it (it creates a directory structure)

Libraries vs Frameworks
        -> User/programmer is calling code
        >>>import math
        >>>math.sqrt(16)

        Framework:
        -> in Framework it is the code in the framework that calls the code
        -> framework tells you where to put the code

-------------------------------------------------------------------------------------------

Django
        -> Open-source web framework written in python that allows you to create web application
        -> Supported by an independent foundation (Django software foundation)
        -> Django is primarly a backend framework, it has features that allows it to handle frontend development as well

Why Django:
        -> set-up easy
        -> ready-to-user interface for administration activites


Python Package index(PyPi)
        Repository of software for the python programming language
        (helps you to find and install software developed and shared by python community)

------------------------------------------------------------------------------------------------

Django makes use of a directory structure to arrange diiferent parts of web application
-> schedule
        schedule --> __init__.py
                     settings.py
                     urls.py
                     wsgi.py
                     asgi.py
                     manage.py

manage.py : 
        -> command-line utility for our project
        -> the file contains the code for running the server, makemigrations ... and several commands
        -> it lets you to interact with your project        

settings.py
        -> typically  used to store configuration informtion in django
        ->default database is set here

__init__.py 
        ->empty file , function of this file tells
        python interpreter that is directory has package.

urls.py
        -> used to provide you the address of the particular page

wsgi.py(web server gateway interface)
        -> it is the way how servers interact with the applications
        asgi.py(ASGI works similar to WSGI)